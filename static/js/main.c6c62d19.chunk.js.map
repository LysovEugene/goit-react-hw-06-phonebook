{"version":3,"sources":["components/Filter/Filter.module.css","components/animation.module.css","components/ContactList/Contact.module.css","components/App/App.module.css","components/ErrorPopup/ErrorPopup.module.css","redux/phoneBook/phoneBook-actions.js","components/ErrorPopup/ErrorPopup.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactListItem.js","components/ContactList/ContactList.js","components/App/App.js","redux/phoneBook/phoneBook-reducer.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","addContact","createAction","name","number","payload","id","uuidv4","deleteContact","changeFilter","ErrorPopup","text","className","s","popup","ContactForm","state","error","errorMessage","handleChangeInput","e","target","value","setState","handleSubmit","preventDefault","props","contacts","some","contact","setTimeout","reset","onAddContact","this","wrapper","onSubmit","field","input","type","placeholder","onChange","required","button","CSSTransition","in","timeout","classNames","anim","unmountOnExit","Component","connect","items","dispatch","phoneBookActions","filter","onChangeFilter","event","currentTarget","label","ContactListItem","onDelete","contactItem","onClick","getFilteredContacts","allContacts","toLowerCase","includes","onDeleteContact","TransitionGroup","component","map","appear","container","title","length","filterAnim","createReducer","actions","_","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","contactsPersistConfig","key","storage","blacklist","store","configureStore","reducer","persistReducer","phoneBookReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.c6c62d19.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Filter_wrapper__1iYcx\",\"field\":\"Filter_field__23baf\",\"label\":\"Filter_label__1Lgum\",\"input\":\"Filter_input__2uLLn\",\"enter\":\"Filter_enter__3ba11\",\"enterActive\":\"Filter_enterActive__3eg5k\",\"exit\":\"Filter_exit__1ADya\",\"exitActive\":\"Filter_exitActive__1e8lx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appear\":\"animation_appear__2S6sr\",\"appearActive\":\"animation_appearActive__1piJv\",\"enter\":\"animation_enter__2x8VM\",\"enterActive\":\"animation_enterActive__3zVH8\",\"exit\":\"animation_exit__1dUyg\",\"exitActive\":\"animation_exitActive__1GMEL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Contact_wrapper__1TvS8\",\"contactItem\":\"Contact_contactItem__1ON68\",\"button\":\"Contact_button__1EXMM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3MQvs\",\"title\":\"App_title__1ghOZ\",\"appear\":\"App_appear__25769\",\"appearActive\":\"App_appearActive__31DJT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"popup\":\"ErrorPopup_popup__2_N6p\",\"enter\":\"ErrorPopup_enter__1kRDz\",\"enterActive\":\"ErrorPopup_enterActive__1oA7P\",\"exit\":\"ErrorPopup_exit__WW6zz\",\"exitActive\":\"ErrorPopup_exitActive__2l7JF\"};","import { v4 as uuidv4 } from 'uuid';\nimport { createAction } from '@reduxjs/toolkit';\n\nconst addContact = createAction('contacts/add', (name, number) => ({\n  payload: {\n    id: uuidv4(),\n    name,\n    number,\n  },\n}));\n\nconst deleteContact = createAction('contacts/delete');\n\nconst changeFilter = createAction('contacts/changeFilter');\n\nexport default { addContact, deleteContact, changeFilter };\n","import PropTypes from 'prop-types';\nimport s from './ErrorPopup.module.css';\n\nfunction ErrorPopup({ text }) {\n  return (\n    <div className={s.popup}>\n      <h1>{text}</h1>\n    </div>\n  );\n}\n\nErrorPopup.propTypes = {\n  text: PropTypes.string.isRequired,\n};\n\nexport default ErrorPopup;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport phoneBookActions from '../../redux/phoneBook/phoneBook-actions';\nimport ErrorPopup from '../ErrorPopup/ErrorPopup';\nimport { CSSTransition } from 'react-transition-group';\nimport PropTypes from 'prop-types';\nimport s from './ContactForm.module.css';\nimport anim from '../animation.module.css';\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n    error: false,\n    errorMessage: '',\n  };\n\n  reset() {\n    this.setState({ name: '', number: '' });\n  }\n\n  handleChangeInput = e => {\n    const { name, value } = e.target;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { name, number } = this.state;\n    const contacts = this.props.contacts;\n\n    if (contacts.some(contact => contact.name === name)) {\n      this.setState({\n        error: true,\n        errorMessage: 'Этот контакт уже существует',\n      });\n      setTimeout(() => {\n        this.setState({ error: false });\n      }, 3000);\n      this.reset();\n      return;\n    }\n\n    this.props.onAddContact(name, number);\n    this.reset();\n  };\n\n  render() {\n    const { name, number, errorMessage } = this.state;\n\n    return (\n      <div>\n        <form className={s.wrapper} onSubmit={this.handleSubmit}>\n          <label className={s.field}>\n            <span className={s.name}>Name</span>\n            <input\n              className={s.input}\n              type=\"text\"\n              name=\"name\"\n              value={name}\n              placeholder=\"Enter name\"\n              onChange={this.handleChangeInput}\n              required\n            />\n          </label>\n          <label className={s.field}>\n            <span className={s.number}>Number</span>\n            <input\n              className={s.input}\n              type=\"tel\"\n              name=\"number\"\n              value={number}\n              placeholder=\"Enter number\"\n              onChange={this.handleChangeInput}\n              required\n            />\n          </label>\n          <button className={s.button} type=\"submit\">\n            Add contact\n          </button>\n        </form>\n        <CSSTransition\n          in={this.state.error}\n          timeout={250}\n          classNames={anim}\n          unmountOnExit\n        >\n          <ErrorPopup text={errorMessage} />\n        </CSSTransition>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = state => ({\n  contacts: state.contacts.items,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onAddContact: (name, number) =>\n    dispatch(phoneBookActions.addContact(name, number)),\n});\n\nContactForm.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string,\n      number: PropTypes.string,\n    }),\n  ),\n  onAddContact: PropTypes.func.isRequired,\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport phoneBookActions from '../../redux/phoneBook/phoneBook-actions';\nimport PropTypes from 'prop-types';\nimport s from './Filter.module.css';\n\nfunction Filter({ value, onChangeFilter }) {\n  return (\n    <div className={s.wrapper}>\n      <label className={s.field}>\n        <span className={s.label}>Find contacts by name</span>\n        <input\n          className={s.input}\n          type=\"text\"\n          name=\"filter\"\n          value={value}\n          placeholder=\"Enter to find\"\n          onChange={onChangeFilter}\n        />\n      </label>\n    </div>\n  );\n}\nconst mapStateToProps = state => ({\n  value: state.contacts.filter,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onChangeFilter: event =>\n    dispatch(phoneBookActions.changeFilter(event.currentTarget.value)),\n});\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChangeFilter: PropTypes.func,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Contact.module.css';\n\nfunction ContactListItem({ name, number, onDelete }) {\n  return (\n    <li className={s.contactItem}>\n      <span>\n        {name}: {number}\n      </span>\n      <button className={s.button} type=\"button\" onClick={onDelete}>\n        Delete\n      </button>\n    </li>\n  );\n}\n\nContactListItem.propTypes = {\n  name: PropTypes.string,\n  number: PropTypes.string,\n  onDelete: PropTypes.func,\n};\n\nexport default ContactListItem;\n","import React from 'react';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport { connect } from 'react-redux';\nimport phoneBookActions from '../../redux/phoneBook/phoneBook-actions';\nimport PropTypes from 'prop-types';\nimport ContactListItem from './ContactListItem';\nimport s from './Contact.module.css';\nimport anim from '../animation.module.css';\n\nfunction ContactList({ contacts, onDeleteContact }) {\n  return (\n    <TransitionGroup component=\"ul\" className={s.wrapper}>\n      {contacts.map(({ id, name, number }) => {\n        return (\n          <CSSTransition timeout={250} classNames={anim} key={id}>\n            <ContactListItem\n              appear={true}\n              name={name}\n              number={number}\n              unmountOnExit\n              onDelete={() => onDeleteContact(id)}\n            />\n          </CSSTransition>\n        );\n      })}\n    </TransitionGroup>\n  );\n}\n\nconst getFilteredContacts = (allContacts, filter) => {\n  return allContacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase()),\n  );\n};\nconst mapStateToProps = ({ contacts: { items, filter } }) => {\n  return {\n    contacts: getFilteredContacts(items, filter),\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  onDeleteContact: id => dispatch(phoneBookActions.deleteContact(id)),\n});\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string,\n      number: PropTypes.string,\n    }),\n  ),\n  onDeleteContact: PropTypes.func,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import React from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport { connect } from 'react-redux';\nimport ContactForm from '../ContactForm/ContactForm.js';\nimport Filter from '../Filter/Filter.js';\nimport ContactList from '../ContactList/ContactList.js';\nimport PropTypes from 'prop-types';\nimport s from './App.module.css';\nimport anim from '../animation.module.css';\nimport filterAnim from '../Filter/Filter.module.css';\n\nfunction App({ contacts }) {\n  return (\n    <div className={s.container}>\n      <CSSTransition\n        in={true}\n        appear={true}\n        timeout={500}\n        classNames={s}\n        unmountOnExit\n      >\n        {<h1 className={s.title}>Phonebook</h1>}\n      </CSSTransition>\n\n      <ContactForm />\n\n      <CSSTransition\n        in={contacts.length > 1}\n        classNames={filterAnim}\n        timeout={250}\n        unmountOnExit\n      >\n        <Filter />\n      </CSSTransition>\n\n      <CSSTransition\n        in={contacts.length > 0}\n        appear={true}\n        timeout={250}\n        classNames={anim}\n        unmountOnExit\n      >\n        <div>\n          <h2 className={s.title}>Contacts</h2>\n          <ContactList />\n        </div>\n      </CSSTransition>\n    </div>\n  );\n}\nconst mapStateToProps = state => ({\n  contacts: state.contacts.items,\n});\n\nApp.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string,\n      number: PropTypes.string,\n    }),\n  ),\n};\nexport default connect(mapStateToProps, null)(App);\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\n\nimport actions from './phoneBook-actions';\n\nconst items = createReducer([], {\n  [actions.addContact]: (state, { payload }) => [...state, payload],\n  [actions.deleteContact]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer('', {\n  [actions.changeFilter]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n});\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport phoneBookReducer from './phoneBook/phoneBook-reducer';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst contactsPersistConfig = {\n  key: 'contacts',\n  storage,\n  blacklist: ['filter'],\n};\n\nconst store = configureStore({\n  reducer: {\n    contacts: persistReducer(contactsPersistConfig, phoneBookReducer),\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nconst persistor = persistStore(store);\n\nexport default { store, persistor };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport App from './components/App/App';\nimport store from './redux/store';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <BrowserRouter>\n        <PersistGate loading={null} persistor={store.persistor}>\n          <App />\n        </PersistGate>\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"ContactForm_wrapper__2kRxg\",\"field\":\"ContactForm_field__jg5ue\",\"name\":\"ContactForm_name__1MxOv\",\"number\":\"ContactForm_number__2amol\",\"input\":\"ContactForm_input__36WA0\",\"button\":\"ContactForm_button__3iTiJ\"};"],"sourceRoot":""}